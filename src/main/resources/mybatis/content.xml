<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ai4.content.ContentDAOInter"> 

  <!-- content등록 -->
  <insert id="create" parameterType="ContentVO">
    INSERT INTO content(contentsno, cateno, memberno, title, contents, picture, picsize, rdate, pname, price)
    VALUES(cont_seq.nextval, #{cateno}, #{memberno}, #{title}, #{contents}, #{picture}, #{picsize}, sysdate, #{pname}, #{price})
  </insert>
  
  <!--  전체 contentsno 내림차순 정렬 Join 리스트 Cate_ContentVO
  <select id='list_cono_desc' resultType="Cate_ContentVO">
    SELECT c.cateno, c.catename, 
               t.contentsno, t.cateno, t.title, t.memberno, t.picture, t.picsize, t.rdate
    FROM category c, content t  
    WHERE c.cateno(+) = t.cateno
    ORDER BY c.cateno ASC, t.contentsno DESC
  </select>-->
  
  <!-- 카테고리 별 contentsno 내림차순 정렬 ContentVO 
  <select id='list_by_cate_desc' parameterType="int" resultType="ContentVO">
    SELECT contentsno, cateno, memberno, title, picture, picsize, rdate
    FROM content 
    WHERE cateno=#{cateno}
    ORDER BY contentsno DESC
  </select>-->
  
  <!-- 조회 -->
  <select id='read' resultType="ContentVO" parameterType="int">
    SELECT contentsno, cateno, memberno, title, contents, picture, picsize, rdate, views, saleA, pname, price
    FROM content
    WHERE contentsno = #{contentsno}
  </select>
  
  <!-- 수정 -->
  <update id='update' parameterType="ContentVO" >
    UPDATE content
    SET cateno=#{cateno}, title=#{title}, contents=#{contents}, picture=#{picture}, picsize=#{picsize}, pname=#{pname}, price=#{price}, rdate=sysdate
    WHERE contentsno = #{contentsno}
  </update>
  <!-- 수정 페이지에서 썸네일 사진 한개 삭제 -->
  <update id='deletefile' parameterType="ContentVO" >
    UPDATE content
    SET picture=#{picture}, picsize=#{picsize}
    WHERE contentsno = #{contentsno}
  </update>

  <!-- 삭제 -->
  <delete id="delete" parameterType="int">
     DELETE FROM content
     WHERE contentsno = #{contentsno}
  </delete>
  
  <!-- 전체 contentsno 내림차순 정렬 Join 리스트 Cate_ContentVO + 
           전체 제목, 내용으로 검색, 검색어가 없을 경우도 포함 -->
  <!-- There is no getter for property named 'word' in 'class java.lang.String' 
        string은 getter가 없기 때문에 map으로 포장한다.-->
  <!-- 전체 검색 + 조인 -->
  <select id="search_list_all" resultType="Cate_ContentVO" parameterType="HashMap">
    SELECT c.cateno, c.catename, 
               t.contentsno, t.cateno, t.memberno, t.title, substr(t.contents, 0, 36) as contents, t.picture, t.picsize, t.rdate, t.views, t.saleA, t.pname, t.price
    FROM category c, content t 
    <choose>
      <when test="word == null or word == ''"> 
        <!-- 검색하지 않는 경우 -->
        WHERE (c.cateno(+) = t.cateno)
      </when>
      <otherwise>
        WHERE (c.cateno(+) = t.cateno) AND (title LIKE '%' || #{word} || '%' OR contents LIKE '%' || #{word} || '%')
      </otherwise>
    </choose>
    ORDER BY c.cateno ASC, t.contentsno DESC
  </select>
  
  <!-- 전체 제목, 내용으로 검색된 레코드 갯수 -->
  <select id="search_count_all" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM content
    <choose>
      <when test="word == null or word == ''"> 
        <!-- 검색하지 않는 경우 -->
      </when>
      <otherwise>
        WHERE title LIKE '%' || #{word} || '%' OR contents LIKE '%' || #{word} || '%'
      </otherwise>
    </choose>
  </select>
  <!-- 전체 검색 + 페이징 +조인  -->
  <select id="search_list_all_paging" resultType="Cate_ContentVO" parameterType="HashMap">
    SELECT c.cateno, c.catename,
           t.contentsno, t.cateno, t.memberno, t.title, t.contents, t.picture, t.rdate, t.views, t.saleA, t.pname, t.price, t.r
    FROM category c, (
             SELECT contentsno, cateno, memberno, title, contents, picture, rdate, views, saleA, pname, price, rownum as r
             FROM(
                      SELECT contentsno, cateno, memberno, title, substr(contents, 0, 36) as contents, picture, rdate, views, saleA, pname, price
                      FROM content
                      <choose>
                        <when test="word == null or word == ''"> 
                        <!-- 검색하지 않는 경우 -->
                        </when>
                        <otherwise>
                          WHERE (title LIKE '%' || #{word} || '%' OR contents LIKE '%' || #{word} || '%')
                        </otherwise>
                      </choose>
                      ORDER BY contentsno DESC
             )
    ) t
    WHERE (c.cateno(+) = t.cateno) AND (<![CDATA[r >= #{startNum} AND r <= #{endNum}]]>)
    <!-- WHERE r >=1 AND r <= 3 -->
    <!-- 1) 단순 문자열로 인식: <![CDATA[   ...   ]]> -->
  </select>
  
  <!-- 카테고리 별 contentsno 내림차순 정렬 ContentVO
        카테고리별 제목, 내용으로 검색, 검색어가 없을 경우도 포함-->
  <select id="search_list_by_cateno" resultType="ContentVO" parameterType="HashMap">
    SELECT contentsno, cateno, memberno, title, contents, picture, rdate, views, saleA, pname, price
    FROM content
    <choose>
      <when test="word == null or word ==''"> 
        WHERE cateno=#{cateno}<!-- 검색하지 않는 경우 -->
      </when>
      <otherwise>
        WHERE cateno=#{cateno} AND (title LIKE '%' || #{word} || '%' OR contents LIKE '%' || #{word} || '%')  
      </otherwise>
    </choose>
    ORDER BY contentsno DESC
  </select>
  <!-- 카테고리별 제목, 내용으로 검색된 레코드 갯수 -->
  <select id="search_count_by_cateno" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM content
    <choose>
      <when test="word == null or word ==''"> 
        WHERE cateno=#{cateno}<!-- 검색하지 않는 경우 -->
      </when>
      <otherwise>
        WHERE cateno=#{cateno} AND (title LIKE '%' || #{word} || '%' OR contents LIKE '%' || #{word} || '%')  
      </otherwise>
    </choose>
  </select>
  <!-- 카테고리 별 검색된 레코드 목록 + 페이징 -->
  <select id="search_list_by_cateno_paging" resultType="ContentVO" parameterType="HashMap">
    SELECT contentsno, cateno, memberno, title, contents, picture, rdate, views, saleA, pname, price, r
    FROM(
             SELECT contentsno, cateno, memberno, title, contents, picture, rdate, views, saleA, pname, price, rownum as r
             FROM(
                      SELECT contentsno, cateno, memberno, title, substr(contents, 0, 36) as contents, picture, rdate, views, saleA, pname, price
                      FROM content
                      <choose>
                        <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                          WHERE cateno=#{cateno}
                        </when>
                        <otherwise>
                          WHERE cateno=#{cateno} AND (title LIKE '%' || #{word} || '%' OR contents LIKE '%' || #{word} || '%')
                        </otherwise>
                      </choose>
                      ORDER BY contentsno DESC
             )
    )
    WHERE <![CDATA[r >= #{startNum} AND r <= #{endNum}]]>
    <!-- WHERE r >=1 AND r <= 3 -->
    <!-- 1) 단순 문자열로 인식: <![CDATA[   ...   ]]> -->
  </select>
  
  <!-- 조회수를 1 증가 -->
  <update id='views' parameterType="int">
    UPDATE content
    SET views = views+1
    WHERE contentsno = #{contentsno}
  </update>
  
  <!-- 판매완료 -->
  <update id='sale' parameterType="int">
    UPDATE content
    SET saleA = 'N'
    WHERE contentsno = #{contentsno}
  </update>
  
  
</mapper>